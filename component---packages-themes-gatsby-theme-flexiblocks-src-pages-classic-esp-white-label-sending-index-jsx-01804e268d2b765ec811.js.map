{"version":3,"sources":["webpack://@elegantstack/gatsby-starter-flexiblocks/../packages/themes/gatsby-theme-flexiblocks/src/pages/classic-esp/white-label-sending/_theme.js","webpack://@elegantstack/gatsby-starter-flexiblocks/../packages/themes/gatsby-theme-flexiblocks/src/pages/classic-esp/white-label-sending/assets/contour-pattern.svg","webpack://@elegantstack/gatsby-starter-flexiblocks/../packages/themes/gatsby-theme-flexiblocks/src/pages/classic-esp/white-label-sending/_styles.js","webpack://@elegantstack/gatsby-starter-flexiblocks/../packages/themes/gatsby-theme-flexiblocks/src/pages/classic-esp/white-label-sending/index.jsx"],"names":["colors","background","headerBg","footerBg","html","overflowX","body","heroContainer","content","size","position","top","left","zIndex","t","heroBg","alphaLighter","backgroundSize","bg","borderRadius","passing","footer","display","props","allBlockContent","data","normalizeBlockContentNodes","nodes","Layout","theme","xs","styles","className","Seo","title","description","SubHeader","menuJustify","Divider","space","variant","sx","FeatureLeft","FeatureRight","Main","Base"],"mappings":"+WASA,GACEA,OAAQ,CACNC,WAAW,UACXC,SAAS,cACTC,SAAS,YCbb,EAAe,IAA0B,8DCSzC,GACEC,KAAM,CACJC,UAAW,UAEbC,KAAO,CACLD,UAAW,UAEbE,cAAe,CACb,WAAY,CACVC,QAAQ,MACRC,KAAK,OACLC,SAAS,WACTC,IAAI,OACJC,KAAM,EACNC,QAAS,EACTZ,WAAY,SAAAa,GAAC,aACJC,EADI,wEAGPD,EAAEd,OAAOgB,aAHF,mBAIPF,EAAEd,OAAOC,WAJF,oBAMbgB,eAAe,OACfC,GAAG,eACHC,aAAa,KACbC,QAAQ,SAGZC,OAAQ,CACNC,QAAQ,QACRjB,UAAW,W,UC4Bf,EA/CkB,SAAAkB,GAChB,IAAQC,EAAoBD,EAAME,KAA1BD,gBACFhB,GAAUkB,OAA2BF,aAAD,EAACA,EAAiBG,OAE5D,OACE,QAACC,EAAA,GAAD,QAAQC,MAAOA,GAAWN,EAA1B,CAAiCO,GAAIC,UACnC,eAAKC,UAAU,mBACf,QAACC,EAAA,EAAD,CAAKC,MAAM,iBAAiBC,YAAY,MAEtC,eAAKH,UAAU,oBACb,QAACI,EAAA,EAAD,CAAW5B,QAASA,EAAO,sBAA2B6B,YAAY,oBAEpE,QAAC,IAAD,CAAQ7B,QAASA,EAAO,UACxB,QAAC8B,EAAA,EAAD,CAASC,MAAM,OACf,QAACD,EAAA,EAAD,CAASC,MAAM,OACf,QAAC,KAAD,CAAWP,UAAU,sBAAsBQ,QAAQ,OAAOC,GAAIV,kBAC5D,QAAC,IAAD,CAAMvB,QAASA,EAAO,QACtB,QAAC8B,EAAA,EAAD,CAASC,MAAM,QAEjB,eAAKP,UAAU,yCACb,QAACU,EAAA,EAAD,CAAalC,QAASA,EAAO,cAE/B,eAAKwB,UAAU,wCACb,QAACW,EAAA,EAAD,CAAcnC,QAASA,EAAO,cAEhC,eAAKwB,UAAU,yCACb,QAACU,EAAA,EAAD,CAAalC,QAASA,EAAO,cAE/B,QAAC,IAAD,CAAQA,QAASA,EAAO,UACxB,QAACoC,EAAA,EAAD,OACA,QAACC,EAAA,EAAD","file":"component---packages-themes-gatsby-theme-flexiblocks-src-pages-classic-esp-white-label-sending-index-jsx-01804e268d2b765ec811.js","sourcesContent":["/**\r\n * These theme values will override the base theme.\r\n *\r\n * We're passing these values to Layout component;\r\n * The Layout component merges these values with the\r\n * base theme.\r\n *\r\n */\r\n\r\nexport default {\r\n  colors: {\r\n    background: `#fbfbfb`,\r\n    headerBg: `transparent`,\r\n    footerBg: `#f1f3f8`\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/contour-pattern-31b9121b55c7a157c438084d7a7bab57.svg\";","/**\r\n *\r\n * These styles are solely for adding [background images] or\r\n * [background colors] to blocks.\r\n *\r\n */\r\n\r\nimport heroBg from './assets/contour-pattern.svg'\r\n\r\nexport default {\r\n  html: {\r\n    overflowX: 'hidden'\r\n  },\r\n  body : {\r\n    overflowX: 'hidden'\r\n  },\r\n  heroContainer: {\r\n    '::before': {\r\n      content: `\" \"`,\r\n      size: `full`,\r\n      position: `absolute`,\r\n      top: `-10%`,\r\n      left: 0,\r\n      zIndex: -1,\r\n      background: t =>\r\n        `url(${heroBg}) no-repeat center 0, linear-gradient(\r\n          180deg,\r\n          ${t.colors.alphaLighter} 0%,\r\n          ${t.colors.background} 100%\r\n        )`,\r\n      backgroundSize: `100%`,\r\n      bg: `omegaLighter`,\r\n      borderRadius: `xl`,\r\n      passing: `10px`\r\n    }\r\n  },\r\n  footer: {\r\n    display:\"block\",\r\n    overflowX: \"hidden\"\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { Container } from 'theme-ui'\r\nimport Layout from '@solid-ui-layout/Layout'\r\nimport Seo from '@solid-ui-components/Seo'\r\nimport Divider from '@solid-ui-components/Divider'\r\nimport SubHeader from '@solid-ui-blocks/SubHeader/SubHeader'\r\nimport Header from '@solid-ui-blocks/InnerPage/HeaderBlock01'\r\nimport Footer from '@solid-ui-blocks/InnerPage/FooterBlock01'\r\nimport { normalizeBlockContentNodes } from '@blocks-helpers'\r\nimport Main from '@solid-ui-blocks/SEO/Main'\r\nimport Base from '@solid-ui-blocks/SEO/Base'\r\nimport Hero from '@solid-ui-blocks/InnerPage/HeroBlock02'\r\nimport FeatureLeft from '@solid-ui-blocks/InnerPage/FeatureLeft'\r\nimport FeatureRight from '@solid-ui-blocks/InnerPage/FeatureRight'\r\nimport theme from './_theme'\r\nimport styles from './_styles'\r\nimport './innerpage.css'\r\n\r\nconst IndexPage = props => {\r\n  const { allBlockContent } = props.data\r\n  const content = normalizeBlockContentNodes(allBlockContent?.nodes)\r\n\r\n  return (\r\n    <Layout theme={theme} {...props} xs={styles.body}>\r\n      <div className=\"innerpage-main\">\r\n      <Seo title='Features | SMS' description=\"\" />\r\n        {/* Blocks */}\r\n        <div className=\"subheader-block\">\r\n          <SubHeader content={content['subheader_classic_esp']} menuJustify='space-between' />\r\n        </div>\r\n        <Header content={content['header']} />\r\n        <Divider space='5' />\r\n        <Divider space='4' />\r\n        <Container className=\"innerpage-heroblock\" variant='full' sx={styles.heroContainer}>\r\n          <Hero content={content['hero']} />\r\n          <Divider space='5' />\r\n        </Container>\r\n        <div className=\"innerpage-section bg-white img-right\">\r\n          <FeatureLeft content={content['features1']} />\r\n        </div>\r\n        <div className=\"innerpage-section bg-light img-left\">\r\n          <FeatureRight content={content['features2']} />\r\n        </div>\r\n        <div className=\"innerpage-section bg-white img-right\">\r\n          <FeatureLeft content={content['features3']} />\r\n        </div>\r\n        <Footer content={content['footer']} />\r\n        <Main />\r\n        <Base />\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query classicESPFeaturesPage5BlockContent {\r\n    allBlockContent(\r\n      filter: { page: { in: [\"classic-esp/white-label-sending\", \"shared\"] } }\r\n    ) {\r\n      nodes {\r\n        ...BlockContent\r\n      }\r\n    }\r\n  }\r\n`\r\nexport default IndexPage\r\n"],"sourceRoot":""}